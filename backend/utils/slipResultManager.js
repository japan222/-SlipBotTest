// utils/slipResultManager.js
import axios from "axios";
import SlipResult from "../models/SlipResult.js";
import { broadcastLog } from "./logManager.js";

export async function loadSlipResults() {
  try {
    const now = Date.now();
    const yesterday = new Date(now - 24 * 60 * 60 * 1000);

    return await SlipResult.find({ createdAt: { $gte: yesterday } }).sort({ createdAt: -1 });
  } catch (err) {
    console.error("‚ùå ‡πÇ‡∏´‡∏•‡∏î slipResults ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err.message);
    broadcastLog("‚ùå ‡πÇ‡∏´‡∏•‡∏î slipResults ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: " + err.message);
    return [];
  }
}

export async function saveSlipResults(newSlip) {
  try {
    await SlipResult.create(newSlip);
  } catch (err) {
    console.error("‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å slipResult ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err.message);
    broadcastLog("‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å slipResult ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: " + err.message);
  }
}

export async function reportResultToAPI(baseURL, result) {
  try {
    await axios.post(`${baseURL}/api/slip-results`, result);
  } catch (error) {
    console.error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏•‡∏™‡∏•‡∏¥‡∏õ‡πÑ‡∏õ‡∏¢‡∏±‡∏á API:", error.message);
    broadcastLog("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏•‡∏™‡∏•‡∏¥‡∏õ‡πÑ‡∏õ‡∏¢‡∏±‡∏á API: " + error.message);
  }
}

export async function removeOldSlips() {
  const now = new Date();
  const yesterday = new Date(now.getTime() - 24 * 60 * 60 * 1000);
  try {
    const result = await SlipResult.deleteMany({ createdAt: { $lt: yesterday } });
    console.log(`üßπ ‡∏•‡∏ö SlipResult ‡πÄ‡∏Å‡πà‡∏≤ ${result.deletedCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
  } catch (err) {
    console.error("‚ùå ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err.message);
    broadcastLog("‚ùå ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err.message);
  }
}